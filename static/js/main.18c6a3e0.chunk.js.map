{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","services/prepareTodos.ts","index.tsx"],"names":["TodoList","todos","selectedTodo","onTodoSelected","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","setFilterField","useState","query","setQuery","onChange","event","prev","status","target","value","placeholder","inputQuery","toLowerCase","trim","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onClose","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodo","filterField","filteredTodos","filteredByTitle","filter","includes","prepareTodos","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18c6a3e0.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo?: Todo | null;\n  onTodoSelected?: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos = [],\n  selectedTodo = null,\n  onTodoSelected = () => { },\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': todo.id === selectedTodo?.id,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(todo.completed\n                ? 'has-text-success'\n                : 'has-text-danger')}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onTodoSelected(todo)}\n            >\n              <span className=\"icon\">\n                {todo.id === selectedTodo?.id ? (\n                  <i className=\"far fa-eye-slash\" />\n                ) : (\n                  <i className=\"far fa-eye\" />\n                )}\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport { FilterField } from '../../types/FilterField';\n\ntype Props = {\n  setFilterField: React.Dispatch<React.SetStateAction<FilterField>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({ setFilterField }) => {\n  const [query, setQuery] = useState('');\n\n  const handleSelectChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setFilterField(prev => ({ ...prev, status: event.target.value }));\n  };\n\n  const handleInputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    const inputQuery = event.target.value.toLowerCase().trim();\n\n    setQuery(event.target.value);\n    setFilterField(prev => ({ ...prev, title: inputQuery }));\n  };\n\n  const handleReset = () => {\n    setQuery('');\n    setFilterField(prev => ({ ...prev, title: '' }));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectChange}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            /* eslint-disable-next-line jsx-a11y/control-has-associated-label */\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleReset}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todo: Todo;\n  onClose?: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n\n    return () => setUser(null);\n  }, [todo.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { FilterField } from './types/FilterField';\nimport { prepareTodos } from './services/prepareTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterField, setFilterField] = useState<FilterField>({ status: 'all', title: '' });\n\n  const filteredTodos = prepareTodos(todos, filterField);\n\n  useEffect(() => {\n    getTodos().then(setTodos);\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter setFilterField={setFilterField} />\n            </div>\n\n            <div className=\"block\">\n              {todos.length > 0 ? (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  onTodoSelected={setSelectedTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClose={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import { FilterField } from '../types/FilterField';\nimport { Todo } from '../types/Todo';\n\nexport function prepareTodos(todos: Todo[], filterField: FilterField) {\n  const { status, title } = filterField;\n  const filteredByTitle = todos\n    .filter(todo => todo.title.toLowerCase().includes(title));\n\n  switch (status) {\n    case 'active':\n      return filteredByTitle.filter(({ completed }) => !completed);\n    case 'completed':\n      return filteredByTitle.filter(({ completed }) => completed);\n    default:\n      return filteredByTitle;\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}